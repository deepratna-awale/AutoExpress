name: Build Windows Release

on:
  workflow_call:
    inputs:
      tag_name:
        required: true
        type: string
        description: 'The tag name for the release'
    outputs:
      artifact_name:
        description: 'Name of the Windows release artifact'
        value: ${{ jobs.build-windows.outputs.artifact_name }}

jobs:
  build-windows:
    runs-on: windows-latest
    outputs:
      artifact_name: ${{ steps.set_output.outputs.artifact_name }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Create virtual environment and install dependencies
        run: |
          cd AutoExpress
          python -m venv .venv
          .venv\Scripts\activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          deactivate
          cd ..
        shell: cmd
      
      - name: Create Windows release package
        run: |
          $version = "${{ inputs.tag_name }}" -replace '\.', '_'
          $folder = "autoexpress_${version}_windows"
          mv AutoExpress "$folder"
          # Copy release README and rename it
          mv "$folder/RELEASE_README.md" "$folder/README.md"
          # Archive the folder
          Compress-Archive -Path $folder -DestinationPath "${folder}_Release.zip"
        shell: powershell
      
      - name: Upload Windows artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: autoexpress_${{ inputs.tag_name }}_windows_Release.zip
          retention-days: 1
      
      - name: Set output
        id: set_output
        run: echo "artifact_name=autoexpress_${{ inputs.tag_name }}_windows_Release.zip" >> $GITHUB_OUTPUT
        shell: bash
