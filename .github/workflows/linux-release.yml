name: Build Linux Release

on:
  workflow_call:
    inputs:
      tag_name:
        required: true
        type: string
        description: 'The tag name for the release'
    outputs:
      artifact_name:
        description: 'Name of the Linux release artifact'
        value: ${{ jobs.build-linux.outputs.artifact_name }}

jobs:
  build-linux:
    runs-on: ubuntu-latest
    outputs:
      artifact_name: ${{ steps.set_output.outputs.artifact_name }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Create virtual environment and install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          deactivate
      
      - name: Create Linux release package
        run: |
          version="${{ inputs.tag_name }}"
          version_underscore="${version//./_}"
          folder="autoexpress_${version_underscore}_linux"
          mkdir "$folder"
          # Create and activate virtual environment
          python3 -m venv "$folder/.venv"
          source "$folder/.venv/bin/activate"
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          deactivate
          # Copy release README and rename it
          cp RELEASE_README.md "$folder/README.md"
          # Make run script executable
          chmod +x "$folder/run.sh"
          # Archive the folder
          zip -r "${folder}_Release.zip" "$folder"
      
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-release
          path: autoexpress_${{ inputs.tag_name }}_linux_Release.zip
          retention-days: 1
      
      - name: Set output
        id: set_output
        run: echo "artifact_name=autoexpress_${{ inputs.tag_name }}_linux_Release.zip" >> $GITHUB_OUTPUT
